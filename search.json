[{"path":"https://statisticsnorway.github.io/SSBpris/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"The MIT License","title":"The MIT License","text":"Copyright 2023 Statistisk sentralbyrå - Statistics Norway Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/SECURITY.html","id":null,"dir":"","previous_headings":"","what":"Security Policy","title":"Security Policy","text":"SSB takes security software products services seriously, includes source code repositories managed GitHub organization. believe responsible disclosure security vulnerabilities helps us ensure security privacy users.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"believe found security vulnerability SSB’s GitHub repositories, please report us using Github Private vulnerability reporting tool.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Øyvind Langsrud. Author. Susie Jentoft. Author. Anne Vedø. Author, maintainer.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Langsrud Ø, Jentoft S, Vedø (2023). SSBpris: Tools price index calculations. R package version 0.1.2.","code":"@Manual{,   title = {SSBpris: Tools for price index calculations},   author = {Øyvind Langsrud and Susie Jentoft and Anne Vedø},   year = {2023},   note = {R package version 0.1.2}, }"},{"path":"https://statisticsnorway.github.io/SSBpris/index.html","id":"ssbpris","dir":"","previous_headings":"","what":"Tools for price index calculations","title":"Tools for price index calculations","text":"package contains functions calculating price indices variances. also contains useful function allocating samples used price indices. allocation samples price indices can found (norsk internal SSB document): https://wiki.ssb./display/s880/Standard+utvalgsplanlegging++Norsamu?preview=/32669820/32964617/SBS-utvalgsplanlegging.pdf","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/AllocM.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal allocation M function — AllocM","title":"Internal allocation M function — AllocM","text":"sure actually use price index","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/AllocM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal allocation M function — AllocM","text":"","code":"AllocM(bhgData, n0)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/AllocM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal allocation M function — AllocM","text":"bhgData Data giving average number price observations stratum group. n0 Allocation","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/AllocM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal allocation M function — AllocM","text":"m","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/AllocTot.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal allocation function — AllocTot","title":"Internal allocation function — AllocTot","text":"sure used price index ...","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/AllocTot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal allocation function — AllocTot","text":"","code":"AllocTot(s2, w, ai, totn)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/AllocTot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal allocation function — AllocTot","text":"s2 Sigma squared values w Weights vector ai Adjustment factor totn Total sample size","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/AllocTot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal allocation function — AllocTot","text":"ni","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcInd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of the estimate for a price index — CalcInd","title":"Calculation of the estimate for a price index — CalcInd","text":"Calculation price index","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcInd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of the estimate for a price index — CalcInd","text":"","code":"CalcInd(data, baseVar, pVar, type, groupVar, consumVar = NULL, wVar = NULL)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcInd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of the estimate for a price index — CalcInd","text":"data dataset baseVar variable name base goods price. pVar variable name goods price. type type index calculate. Choose : 'carli', 'dutot', 'jevons'. groupVar variable used grouping observations - sometimes called elementary group consumVar variable used grouping elementary groups. may publishing level. wVar variable used weight elementary groups consumer publishing level.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcInd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of the estimate for a price index — CalcInd","text":"estimates index returned vector length equal number groups (groupVar consumVar specified).","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcInd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of the estimate for a price index — CalcInd","text":"","code":"{ data(priceData) # Calculate index for consumer groups CalcInd(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"varenr\", wVar = \"weight\",    consumVar = \"coicop\", type = \"dutot\") CalcInd(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"varenr\", wVar = \"weight\",    consumVar = \"coicop\", type = \"carli\") CalcInd(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"varenr\", wVar = \"weight\",    consumVar = \"coicop\", type = \"jevons\")    # Calculate index for elemenatry groups (weighted) CalcInd(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"varenr\", wVar = \"weight\",     type = \"dutot\")        } #> Warning: Elementary group weights did not add to one and have been scaled. #> Warning: Elementary group weights did not add to one and have been scaled. #> Warning: Elementary group weights did not add to one and have been scaled. #> Warning: No consumer group variable was specified so an index was calculated for each elementary group. #> Warning: Elementary group weights did not add to one and have been scaled. #>   [1] 0.003690734 0.004574402 0.004312178 0.005857209 0.006229546 0.003796148 #>   [7] 0.005153084 0.006806378 0.007038223 0.006247176 0.003427868 0.003782870 #>  [13] 0.005440269 0.003859727 0.004616546 0.004029834 0.006042378 0.005364716 #>  [19] 0.005560842 0.003951132 0.006994809 0.004817830 0.003648421 0.004598474 #>  [25] 0.004736172 0.004557512 0.006590626 0.005661123 0.004434091 0.004606857 #>  [31] 0.005558475 0.006602647 0.004339779 0.004432311 0.004291868 0.006359639 #>  [37] 0.003863258 0.006173791 0.006242554 0.004355449 0.006728157 0.004259546 #>  [43] 0.005208712 0.003546806 0.006274254 0.004540499 0.005805544 0.003443981 #>  [49] 0.004056486 0.004175336 0.006476204 0.006258926 0.005534202 0.006210352 #>  [55] 0.006618152 0.003656793 0.003360781 0.006008725 0.003794584 0.006602543 #>  [61] 0.003934892 0.006085736 0.005737599 0.003894035 0.004561931 0.004387910 #>  [67] 0.003897375 0.003537585 0.006608307 0.006052793 0.005248526 0.004511527 #>  [73] 0.006581023 0.005461424 0.004460249 0.004756056 0.004177449 0.004927417 #>  [79] 0.005566090 0.004767889 0.006056792 0.006546383 0.005053181 0.004906440 #>  [85] 0.004924946 0.006291060 0.006244610 0.004641011 0.005255363 0.005486444 #>  [91] 0.005247767 0.004477662 0.006652127 0.005547310 0.005722959 0.005063146 #>  [97] 0.004185397 0.006823353 0.005741222 0.005640345 0.005321651 0.003897087 #> [103] 0.005215300 0.006341753 0.004436329 0.006049116 0.006595821 0.006632877 #> [109] 0.005001156 0.004147577 0.004924067 0.003526209 0.005366159 0.003960473 #> [115] 0.005571279 0.004767108 0.004642535 0.004501772 0.006457457 0.003746269 #> [121] 0.004005676 0.004481291 0.005508342 0.005946667 0.005031309 0.006178018 #> [127] 0.006683174 0.004079706 0.004092843 0.006364143 0.004945438 0.003830489 #> [133] 0.006050152 0.004398309 0.005240343 0.004189160 0.005619771 0.006053609 #> [139] 0.005666885 0.006314022 0.004400935 0.003645619 0.004169214 0.006033034 #> [145] 0.003457081 0.006921970 0.005886389 0.005281317 0.005846475 0.004763711 #> [151] 0.004254077 0.005731677 0.004002628 0.006169066 0.005777083 0.003647440 #> [157] 0.005309391 0.006285172 0.006426551 0.004035403 0.006084425 0.005298800 #> [163] 0.003435208 0.004608012 0.004047614 0.006055387 0.005365508 0.006811039 #> [169] 0.005561238 0.004085711 0.004333350 0.005630404 0.004617727 0.006394797 #> [175] 0.004186620 0.003871668 0.005736664 0.006474498 0.005425357 0.004964111 #> [181] 0.005265847 0.004745578 0.004647996 0.003865937 0.006755563 0.006130340 #> [187] 0.003802310 0.004182729 0.005012046 0.006215142 0.004842937 0.004138468 #> [193] 0.005324234 0.003662206 0.005652316 0.003510206 0.006025057 0.005479365 #> [199] 0.005797400 0.004649894"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcIndS2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of variance/sigma squared for price index — CalcIndS2","title":"Calculation of variance/sigma squared for price index — CalcIndS2","text":"Calculation sigma squared price index.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcIndS2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of variance/sigma squared for price index — CalcIndS2","text":"","code":"CalcIndS2(data, baseVar, pVar, groupVar, type = c(\"carli\", \"dutot\", \"jevons\"))"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcIndS2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of variance/sigma squared for price index — CalcIndS2","text":"data dataset baseVar variable name base goods price. pVar variable name goods price. groupVar variable used grouping observations - sometimes called elementary group type type index calculate. Choose : 'carli', 'dutot', 'jevons'","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcIndS2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of variance/sigma squared for price index — CalcIndS2","text":"s2 sigma squred values strata group ai adjustment factor used calculations zmat Matrix z values can used check outliers","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/CalcIndS2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of variance/sigma squared for price index — CalcIndS2","text":"","code":"{ # Call in test dataset for an index data(priceData)  # Calculate s2 for an index ss <- CalcIndS2(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"varenr\",  type = \"carli\") ss <- CalcIndS2(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"coicop\",  type = \"jevons\")  # print out s2 values ss$s2 } #>           1           2           3           4           5           6  #> 0.001978245 0.001990785 0.002007839 0.002246234 0.001714990 0.001735577  #>           7           8           9          10  #> 0.002014489 0.002415221 0.002093395 0.001990386"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Carli.html","id":null,"dir":"Reference","previous_headings":"","what":"Carli index calculation — Carli","title":"Carli index calculation — Carli","text":"Carli index calculation","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Carli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carli index calculation — Carli","text":"","code":"Carli(x, y, na.rm = TRUE, ze.rm = TRUE)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Carli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Carli index calculation — Carli","text":"x Vector base prices. y Vector prices statistical time period. na.rm Logical whether remove missing values x y calculation. ze.rm Logical whether remove missing values instrument variable calculations.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Carli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Carli index calculation — Carli","text":"Price index (L-type)","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Dutot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dutot index calculation — Dutot","title":"Dutot index calculation — Dutot","text":"Dutot index calculation","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Dutot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dutot index calculation — Dutot","text":"","code":"Dutot(x, y, na.rm = TRUE, ze.rm = TRUE)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Dutot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dutot index calculation — Dutot","text":"x Vector base prices. y Vector prices statistical time period. na.rm Logical whether remove missing values x y calculation. ze.rm Logical whether remove missing values instrument variable calculations.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Dutot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dutot index calculation — Dutot","text":"Price index (L-type)","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/FillStrataInd.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal allocation of sample sizes by filling up or down for an index — FillStrataInd","title":"Optimal allocation of sample sizes by filling up or down for an index — FillStrataInd","text":"function finds optimal allocation filling one (several) units time stratum().","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/FillStrataInd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal allocation of sample sizes by filling up or down for an index — FillStrataInd","text":"","code":"FillStrataInd(   totm,   bhg,   totVar,   min_n,   max_n,   steps = 1,   rand,   direction = \"up\" )"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/FillStrataInd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal allocation of sample sizes by filling up or down for an index — FillStrataInd","text":"totm total desired sample size number units select  (number desired observations). bhg matrix giving average number observations elementary  group stratum. See Zhang 2015 details. totVar variance index function n (number observations). min_n minimum sample size stratum. can single number  used strata vector numbers (one stratum). max_n maximum sample size stratum. can single number  used strata vector numbers (one stratum). steps number strata fill iteration. Default set 1. rand specify number strata consider random selection fill .  example rand = 10 randomly select 1 (number specified steps) strata  fill based top 10 using probabilities proportional difference  variances. missing, algorithm chose top strata. Currently  programmed direction = '' direction Specify direction algorithm work: \"\" fill 0 minimum value \"\" remove one unit time maximum starting point.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/FillStrataInd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal allocation of sample sizes by filling up or down for an index — FillStrataInd","text":"alloc vector new sample sizes strata. totvar Total variance","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/FillStrataInd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal allocation of sample sizes by filling up or down for an index — FillStrataInd","text":"","code":"{   # call in test dataset data(priceData)  # Calculate index for consumer groups CalcInd(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"varenr\", wVar = \"weight\",          consumVar = \"coicop\", type = \"dutot\")  # Calculate s2 for index s2 <- CalcIndS2(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"varenr\",                  type = \"carli\")$s2  # Calculate bhg matrix ngh <- as.matrix(table(priceData$nace3, priceData$varenr)) mh <- matrix(rep(table(priceData$nace3), 200), 5, 200) bhg <- ngh/mh   # Specify variance function for n (number of observations) - unweighted VarP <- function(n){ return(sum(s2 / n , na.rm = TRUE)) }  # Run algorithm filling up one at a time for sample size of 300 a <- FillStrataInd(totm = 300, bhg, totVar = VarP, min_n = 1, steps = 1,   direction = \"up\") a  # Run algorithm filling down one at a time max_n <- table(priceData$nace3) a <- FillStrataInd(totm = 300, bhg = bhg, totVar = VarP, min_n = 1, max_n = max_n,   steps = 1, direction = \"down\") a } #> Warning: Elementary group weights did not add to one and have been scaled. #> $alloc #> 863 864 873 875 882  #>  59  57  48  91  45  #>  #> $totvar #> [1] 0.294182 #>"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Jevons.html","id":null,"dir":"Reference","previous_headings":"","what":"Jevons index caluclation — Jevons","title":"Jevons index caluclation — Jevons","text":"Jevons index caluclation","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Jevons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jevons index caluclation — Jevons","text":"","code":"Jevons(x, y)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Jevons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jevons index caluclation — Jevons","text":"x Vector base prices. y Vector prices statistical time period.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/Jevons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jevons index caluclation — Jevons","text":"Price index (L-type)","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SpecialRound.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounding strata sample sizes — SpecialRound","title":"Rounding strata sample sizes — SpecialRound","text":"Function rounding strata sample sizes ensure total sample size remains ","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SpecialRound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounding strata sample sizes — SpecialRound","text":"","code":"SpecialRound(x)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SpecialRound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounding strata sample sizes — SpecialRound","text":"x vector unrounded strata sample sizes","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SpecialRound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rounding strata sample sizes — SpecialRound","text":"vector round strata sizes total sample size held constant.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SpecialRound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rounding strata sample sizes — SpecialRound","text":"","code":"{   jj <- c(4.2, 4.2, 4.2, 4.3, 4.3, 4.4, 4.4) SpecialRound(jj) } #> [1] 4 4 4 4 4 5 5"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SwapStrataInd.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal allocation of sample sizes by swapping — SwapStrataInd","title":"Optimal allocation of sample sizes by swapping — SwapStrataInd","text":"function finds optimal allocation swapping one unit time two strata. Beta version: use caution - needs extra testing","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SwapStrataInd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal allocation of sample sizes by swapping — SwapStrataInd","text":"","code":"SwapStrataInd(m, bhg, totVar, min_n, max_n, iter = 100)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SwapStrataInd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal allocation of sample sizes by swapping — SwapStrataInd","text":"m Starting values sample size stratum. sum desired sample size. bhg matrix giving average number observations elementary group stratum. See Zhang 2015 details. totVar variance index function n (number observations). See example (?). min_n minimum sample size stratum. can single number used strata vector numbers (one stratum). max_n maximum sample size stratum. can single number used strata vector numbers (one stratum). iter Number unsuccessful iterations algorithm try stopping. Default 100.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SwapStrataInd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal allocation of sample sizes by swapping — SwapStrataInd","text":"Returns vector new sample sizes strata","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/SwapStrataInd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal allocation of sample sizes by swapping — SwapStrataInd","text":"","code":"{   # call in test dataset data(priceData)  # Calculate s2 for index s2 <- CalcIndS2(data = priceData, baseVar = \"b1\", pVar = \"p1\", groupVar = \"varenr\",                  type = \"carli\")$s2  # Calculate bhg matrix ngh <- table(priceData$nace3, priceData$varenr) mh <- matrix(rep(table(priceData$nace3), 200), 5, 200) bhg <- ngh/mh   # Specify variance function for n (number of observations) - unweighted VarP <- function(n){   return(sum(s2 / n , na.rm = TRUE)) }  # Start values for sample size in each strata with equal numbers (adding to 300)  m <- rep(300/5, 5)  # Run Swap strata a <- SwapStrataInd(m = m, bhg = bhg, totVar = VarP, iter = 100) a } #> There has been 53 succesful iterations.  #> [1] 59 57 48 91 45"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/priceData.html","id":null,"dir":"Reference","previous_headings":"","what":"Price test dataset — priceData","title":"Price test dataset — priceData","text":"dataset test dataset containing small sample 1000 goods prices. Variables include goods price 3 periods base price three equivalent periods.","code":""},{"path":"https://statisticsnorway.github.io/SSBpris/reference/priceData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Price test dataset — priceData","text":"","code":"data(priceData)"},{"path":"https://statisticsnorway.github.io/SSBpris/reference/priceData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Price test dataset — priceData","text":"Dataset containing variables:: dufNr company number nace5 industry group (5 digits) nace3 industry group (3digits) varenr identity number specific goods coicop grouping variable goods similar. publishing level. weight Variable specifying weight given based type goods. p1 price first period p2 price second period p3 price third period b1 base price used first period b2 base price used second period b3 base price used third period","code":""}]
